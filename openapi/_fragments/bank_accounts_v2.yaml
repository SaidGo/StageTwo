paths:
  /bank_accounts:
    post:
      summary: Create bank account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreate'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
    get:
      summary: List bank accounts
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccounts'
  /bank_accounts/{uuid}:
    get:
      summary: Get bank account
      parameters:
        - in: path
          name: uuid
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        '404': { description: not found }
    put:
      summary: Update bank account
      parameters:
        - in: path
          name: uuid
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountUpdate'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
    delete:
      summary: Delete bank account
      parameters:
        - in: path
          name: uuid
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: no content }

  /legal-entities/{uuid}/bank-accounts:
    get:
      summary: List bank accounts for Legal Entity
      parameters:
        - in: path
          name: uuid
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccounts'

components:
  schemas:
    BankAccount:
      type: object
      properties:
        uuid: { type: string, format: uuid }
        legal_entity_uuid: { type: string, format: uuid, nullable: true }
        bik: { type: string }
        bank: { type: string }
        address: { type: string }
        corr_account: { type: string }
        account: { type: string }
        currency: { type: string }
        comment: { type: string }
        is_primary: { type: boolean }
        created_at: { type: string, format: date-time }
        updated_at: { type: string, format: date-time }
    BankAccounts:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
    BankAccountCreate:
      type: object
      required: [account, bank, currency]
      properties:
        legal_entity_uuid: { type: string, format: uuid, nullable: true }
        bik: { type: string }
        bank: { type: string }
        address: { type: string }
        corr_account: { type: string }
        account: { type: string }
        currency: { type: string }
        comment: { type: string }
        is_primary: { type: boolean }
    BankAccountUpdate:
      type: object
      properties:
        legal_entity_uuid: { type: string, format: uuid, nullable: true }
        bik: { type: string }
        bank: { type: string }
        address: { type: string }
        corr_account: { type: string }
        account: { type: string }
        currency: { type: string }
        comment: { type: string }
        is_primary: { type: boolean }
