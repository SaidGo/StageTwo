openapi: 3.0.3
info:
  title: Legal Entity API
  version: "1.0"

paths:
  /legal-entities:
    get:
      summary: Get all legal entities
      tags:
        - federation
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalEntity'
    post:
      summary: Create legal entity
      tags:
        - federation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLegalEntity'
      responses:
        '201':
          description: Created legal entity with generated UUID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'

  /legal-entities/{uuid}:
    get:
      summary: Get legal entity by UUID
      tags:
        - federation
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'

    put:
      summary: Update legal entity by UUID
      tags:
        - federation
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLegalEntity'
      responses:
        '200':
          description: Updated legal entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'

    delete:
      summary: Delete legal entity by UUID
      tags:
        - federation
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '204':
          description: Deleted

components:
  schemas:
    UUID:
      type: string
      format: uuid
      description: UUID в формате RFC 4122

    LegalEntity:
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/UUID'
          description: Уникальный идентификатор юридического лица
        name:
          type: string
          description: Название юридического лица
        created_at:
          type: string
          format: date-time
          description: Дата и время создания записи
        updated_at:
          type: string
          format: date-time
          description: Дата и время последнего обновления записи

    CreateLegalEntity:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Название юридического лица

    UpdateLegalEntity:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Новое название юридического лица

  parameters:
    limit:
      name: limit
      in: query
      description: Максимальное количество возвращаемых элементов (для пагинации)
      required: false
      schema:
        type: integer
        minimum: 1
        default: 50
    offset:
      name: offset
      in: query
      description: Смещение от начала выборки (для пагинации)
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
  /bank_accounts:
    get:
      summary: List all bank accounts
      responses:
        '200':
          description: OK
    post:
      summary: Create bank account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreate'
      responses:
        '201':
          description: Created

  /bank_accounts/{uuid}:
    get:
      summary: Get bank account by UUID
      parameters:
        - in: path
          name: uuid
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: OK }
        '404': { description: Not found }
    put:
      summary: Update bank account by UUID
      parameters:
        - in: path
          name: uuid
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/BankAccountUpdate' }
      responses:
        '200': { description: Updated }
    delete:
      summary: Delete bank account by UUID
      parameters:
        - in: path
          name: uuid
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: No Content }

  /legal_entities/{uuid}/bank_accounts:
    get:
      summary: List bank accounts for specific Legal Entity
      parameters:
        - in: path
          name: uuid
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: OK }

components:
  schemas:
    BankAccountCreate:
      type: object
      properties:
        legal_entity_uuid: { type: string, format: uuid, nullable: true }
        bik:              { type: string }
        bank:             { type: string }
        address:          { type: string }
        corr_account:     { type: string }
        account:          { type: string }
        currency:         { type: string }
        comment:          { type: string }
        is_primary:       { type: boolean }
      required: [bik, bank, account, currency]
    BankAccountUpdate:
      allOf:
        - $ref: '#/components/schemas/BankAccountCreate'